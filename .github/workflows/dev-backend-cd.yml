name: Backend CD (Deploy to Lambda)

on:
  push:
    branches: [ develop, iac/feat/dev-workflow ]  # 현재 브랜치 추가
    paths:
      - '1. code/serverless/**'
  workflow_dispatch:  # 수동 트리거 추가
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual test'

jobs:
  deploy:
    name: Deploy Backend to AWS Lambda
    runs-on: ubuntu-latest

    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      working-directory: ./1. code/serverless
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt -t src/
    
    - name: Create deployment package
      working-directory: ./1. code/serverless
      run: |
        cd src
        zip -r ../deployment.zip . -x "*.pyc" "__pycache__/*" "*.git*"
        cd ..
        echo "📦 Deployment package created: $(ls -lh deployment.zip)"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      working-directory: ./2. IaC
      run: terraform init
    
    - name: Get Lambda function name
      id: terraform-outputs
      working-directory: ./2. IaC
      run: |
        echo "lambda_function=$(terraform output -raw lambda_function_name)" >> $GITHUB_OUTPUT
    - name: Deploy to Lambda
      working-directory: ./1. code/serverless
      run: |
        aws lambda update-function-code \
          --function-name ${{ steps.terraform-outputs.outputs.lambda_function }} \
          --zip-file fileb://deployment.zip
    
    - name: Wait for update to complete
      run: |
        aws lambda wait function-updated \
          --function-name ${{ steps.terraform-outputs.outputs.lambda_function }}
    
    - name: Verify deployment
      run: |
        aws lambda get-function \
          --function-name ${{ steps.terraform-outputs.outputs.lambda_function }} \
          --query 'Configuration.[FunctionName,Runtime,LastModified]' \
          --output table
    
    - name: Deployment Success
      run: |
        echo "🚀 Backend deployed successfully!"
        echo "⚡ Lambda Function: ${{ steps.terraform-outputs.outputs.lambda_function }}"
        echo "🐍 Runtime: Python 3.11"
        echo "📝 Check logs: aws logs tail /aws/lambda/${{ steps.terraform-outputs.outputs.lambda_function }} --follow"