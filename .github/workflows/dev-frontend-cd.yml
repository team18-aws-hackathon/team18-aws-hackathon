name: Frontend CD (Deploy to S3 + CloudFront)

on:
  push:
    branches: [ develop, iac/feat/dev-workflow ]  # 현재 브랜치 추가
    paths:
      - '1. code/front/**'
  workflow_dispatch:  # 수동 트리거 추가
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual test'

jobs:
  deploy:
    name: Deploy Frontend to AWS
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # OIDC 인증에 필요
      contents: read    # 코드 읽기에 필요
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: './1. code/front/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./1. code/front
      run: npm install
    
    - name: Lint check
      working-directory: ./1. code/front
      run: npm run lint
    
    - name: Format check
      working-directory: ./1. code/front
      run: npm run format:check
    
    - name: TypeScript type check
      working-directory: ./1. code/front
      run: npx tsc --noEmit
    
    - name: Build
      working-directory: ./1. code/front
      run: npm run build
    
    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/dev-qqq-github-actions-role
        aws-region: us-east-1
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      working-directory: ./2. IaC
      run: terraform init
    
    - name: Get Terraform outputs
      id: terraform-outputs
      working-directory: ./2. IaC
      run: |
        echo "frontend_bucket=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
        echo "cloudfront_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
    
    - name: Deploy to S3
      working-directory: ./1. code/front
      run: |
        aws s3 sync dist/ s3://${{ steps.terraform-outputs.outputs.frontend_bucket }}/ --delete
    
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ steps.terraform-outputs.outputs.cloudfront_id }} \
          --paths "/*"
    
    - name: Deployment Success
      run: |
        echo "🚀 Frontend deployed successfully!"
        echo "📦 S3 Bucket: ${{ steps.terraform-outputs.outputs.frontend_bucket }}"
        echo "🌐 CloudFront Distribution: ${{ steps.terraform-outputs.outputs.cloudfront_id }}"